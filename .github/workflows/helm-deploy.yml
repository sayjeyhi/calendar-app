name: Build and Deploy with Helm

on:
  push:
    branches:
      - main # Trigger when PR is merged into the 'main' branch
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Set commit SHA short
        run: |
          echo "COMMIT_SHA_SHORT=${GITHUB_SHA::8}" >> $GITHUB_ENV
          echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify GHCR login
        run: docker info

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ env.REPOSITORY_NAME }}:${{ env.COMMIT_SHA_SHORT }}
            ghcr.io/${{ env.REPOSITORY_NAME }}:${{ env.CURRENT_DATE }}
            ghcr.io/${{ env.REPOSITORY_NAME }}:latest
          cache-from: type=registry,ref=ghcr.io/${{ env.REPOSITORY_NAME }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ env.REPOSITORY_NAME }}:buildcache,mode=max

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '3.12.0'

      - name: Add Helm repositories
        run: |
          helm repo add traefik https://traefik.github.io/charts
          helm repo update

      - name: Create namespace if not exists
        run: |
          kubectl create namespace test-helm --dry-run=client -o yaml | kubectl apply -f -

      - name: Create image pull secret
        run: |
          kubectl create secret docker-registry dockerconfigjson-github-com \
            --docker-server=ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }} \
            --namespace=test-helm \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Template Helm chart (dry-run)
        run: |
          helm template calendar-app-test ./helm/calendar-app \
            -f ./helm/calendar-app/values-test.yaml \
            --set image.tag=${{ env.COMMIT_SHA_SHORT }} \
            --set image.repository=ghcr.io/${{ env.REPOSITORY_NAME }} \
            --namespace test-helm

      - name: Deploy with Helm
        run: |
          helm upgrade --install calendar-app-test ./helm/calendar-app \
            -f ./helm/calendar-app/values-test.yaml \
            --set image.tag=${{ env.COMMIT_SHA_SHORT }} \
            --set image.repository=ghcr.io/${{ env.REPOSITORY_NAME }} \
            --namespace test-helm \
            --wait \
            --timeout 10m

      - name: Verify deployment
        run: |
          kubectl get pods -n test-helm -l app.kubernetes.io/name=calendar-app
          kubectl get ingress -n test-helm
          kubectl get service -n test-helm

      - name: Check deployment status
        run: |
          kubectl rollout status deployment/calendar-app-test -n test-helm --timeout=300s

      - name: Get deployment info
        run: |
          echo "Deployment completed successfully!"
          echo "Application URL: https://test-helm.iwaskidding.com"
          echo "Image deployed: ghcr.io/${{ env.REPOSITORY_NAME }}:${{ env.COMMIT_SHA_SHORT }}"
          kubectl get ingress -n test-helm -o wide
